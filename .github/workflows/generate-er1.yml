# This is a basic workflow to help you get started with Actions

name: Generate ER1 OpenWrt Firmware

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      release: 
        description: 将编译出的镜像上传到 Release
        required: false
        default: 'true'
      upload-all:
        description: 将编译出的所有镜像都上传到 Artifacts
        required: false
        default: 'false'

env:

  VENDOR: openwrt
  VERSION: 23.05

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Generate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Initialization Environment
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install build-essential libncurses5-dev libncursesw5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip qemu-utils mkisofs

      - name: Setup Environment Variables
        run: |
          echo "DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
          echo "DATETIME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          path: origin

      - name: Download Image Builder
        run: |
          wget https://github.com/ftkey/OpenWRT-SDK-CI/releases/download/R24.12.05_21.15.33_ipq60xx_lede/openwrt-imagebuilder-qualcommax-ipq60xx.Linux-x86_64.tar.xz
          tar -xvf openwrt-imagebuilder-qualcommax-ipq60xx.Linux-x86_64.tar.xz
          rm -rf openwrt-imagebuilder-qualcommax-ipq60xx.Linux-x86_64.tar.xz
          cp -r $GITHUB_WORKSPACE/origin/* $GITHUB_WORKSPACE/openwrt-imagebuilder-qualcommax-ipq60xx.Linux-x86_64/
      
      - name: Download External Packages
        working-directory: openwrt-imagebuilder-qualcommax-ipq60xx.Linux-x86_64
        run: |
          #cat external-package-urls.txt | xargs wget -P packages
      
      - name: Run Patch and DIY Scripts
        working-directory: openwrt-imagebuilder-qualcommax-ipq60xx.Linux-x86_64
        run: |
          bash scripts/builder-patch.sh

      - name: Generate Firmware
        working-directory: openwrt-imagebuilder-qualcommax-ipq60xx.Linux-x86_64
        run: |
          bash build.sh

      - name: Upload VDI Image For Development Purpose
        if: github.ref == 'refs/heads/dev'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.VENDOR }}-${{ env.VERSION }}-x86_64-vdi-image-${{ env.DATETIME }}
          path: openwrt-imagebuilder-qualcommax-ipq60xx.Linux-x86_64/bin/targets/x86/64/*.vdi

      - name: Upload All Firmware to Artifacts
        if: github.event.inputs.upload-all == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.VENDOR }}-${{ env.VERSION }}-x86_64-images-${{ env.DATETIME }}
          path: openwrt-imagebuilder-qualcommax-ipq60xx.Linux-x86_64/bin/targets/x86/64/*

      - name: Upload Firmware to Release
        if: github.event.inputs.release == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: openwrt-imagebuilder-qualcommax-ipq60xx.Linux-x86_64/bin/targets/x86/64/*
          asset_name: ${{ github.event.repository.name }}-${{ github.sha }}
          tag: release-${{ env.DATE }}
          overwrite: true
